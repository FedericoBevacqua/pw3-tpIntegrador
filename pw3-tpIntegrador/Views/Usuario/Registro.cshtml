@model Data.Usuario
@{
	Layout = "~/Views/Shared/_AnonimoLayout.cshtml";
}

<h2>Registro</h2>

<form action="/Usuario/Registro" method="post">
	@*
		TODO: Arreglar que tome el css en los EditorFor
	*@

	<div class="form-group">
		@Html.Label("Email", "Dirección de correo electrónico:")
		@Html.EditorFor(u => u.Email, null, new { @class = "form-control" })
		@Html.ValidationMessageFor(u => u.Email, null, new { @class = "text-danger" })
	</div>

	<div class="form-group">

		@Html.Label("Password", "Contraseña:")
		@Html.EditorFor(u => u.Password, null, new { @class = "form-control" })
		@Html.ValidationMessageFor(u => u.Password, null, new { @class = "text-danger" })

	</div>

	<div class="form-group">
		@*TODO: Arreglar que valide el PasswordConfirm*@
		@Html.Label("PasswordConfirm", "Vuelva a introducir la contraseña:")
		@Html.Password("PasswordConfirm", null, new { @class = "form-control" })
		@Html.ValidationMessage("PasswordConfirm", null, new { @class = "text-danger" })
	</div>

	<div class="form-group">
		@Html.Label("FechaNacimiento", "Fecha de nacimiento:")
		@Html.ValidationMessageFor(u => u.FechaNacimiento, null, new { @class = "text-danger" })
		<input type="date" name="FechaNacimiento" class="form-control" />
	</div>

	<input type="submit" class="btn btn-primary" value="Registrarse" />

</form>


@if (ViewData["MensajeErrorEmail"] != null)
{
	<br />
	<div class="alert alert-danger centermsg" role="alert">
		@ViewData["MensajeErrorEmail"]
	</div>
}
